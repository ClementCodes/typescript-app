{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","models/mock-pokemon.ts","services/pokemon-service.ts","components/loader.tsx","pages/pokemon-details.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","components/pokemon-card.tsx","components/pokemon-search.tsx","pages/pokemon-list.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentifiaction-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatDate","date","Date","getDate","getMonth","getFullYear","formatType","type","color","POKEMONS","id","name","hp","cp","picture","types","created","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","pokemon","method","body","JSON","stringify","headers","index","findIndex","filter","push","term","includes","Object","keys","length","console","process","Loader","className","PokemonsDetail","match","useState","setPokemon","useEffect","getPokemon","params","src","alt","style","width","margin","to","map","key","PokemonForm","isEditForm","value","isValid","form","setForm","history","useHistory","hasType","handleInputChange","e","fieldName","target","fieldValue","newField","isAddForm","validateForm","newForm","startsWith","endsWith","test","isTypeValid","addPokemon","updatePokemon","onSubmit","preventDefault","handleSubmit","onClick","deletePokemon","htmlFor","onChange","marginBottom","disabled","checked","concat","currentType","selectType","PokemonEdit","PokemonCard","borderColor","setColor","onMouseEnter","onMouseLeave","PokemonSearch","setTerm","setPokemons","placeholder","searchPokemon","PokemonList","getPokemons","position","bottom","right","Pokemon","PokemonAdd","getTime","AuthentificationService","username","password","isAuthentificated","setTimeout","Login","message","setMessage","AuthenticationService","login","isAuthenticated","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e2ab36d9.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\n    return `${date.getDate()}/ ${date.getMonth()+1}/${date.getFullYear()}`\n}\nexport default formatDate;","import formatDate from \"./format-date\";\n\nconst formatType = (type: string): string => {\n    let color: string;\n   \n    switch (type) {\n      case 'Feu': \n        color = 'red lighten-1'; \n        break; \n      case 'Eau': \n        color = 'blue lighten-1'; \n        break; \n      case 'Plante': \n        color = 'green lighten-1'; \n        break; \n      case 'Insecte': \n        color = 'brown lighten-1'; \n        break; \n      case 'Normal': \n        color = 'grey lighten-3'; \n        break; \n      case 'Vol': \n        color = 'blue lighten-3'; \n        break; \n      case 'Poison': \n        color = 'deep-purple accent-1'; \n        break; \n      case 'Fée': \n        color = 'pink lighten-4'; \n        break; \n      case 'Psy': \n        color = 'deep-purple darken-2'; \n        break; \n      case 'Electrik': \n        color = 'lime accent-1'; \n        break; \n      case 'Combat': \n        color = 'deep-orange'; \n        break; \n      default: \n        color = 'grey'; \n        break; \n    }\n   \n    return `chip ${color}`;\n}\nexport default formatType;","import Pokemon from \"./pokemon\";\n\n\n   \nexport const POKEMONS: Pokemon[] = [\n {\n  id: 1,\n  name: \"Bulbizarre\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n  types: [\"Plante\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 2,\n  name: \"Salamèche\",\n  hp: 28,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n {\n  id: 3,\n  name: \"Carapuce\",\n  hp: 21,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n  types: [\"Eau\"],\n  created: new Date()\n },\n {\n  id: 4,\n  name: \"Aspicot\",\n  hp: 16,\n  cp: 2,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n  types: [\"Insecte\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 5,\n  name: \"Roucool\",\n  hp: 30,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 6,\n  name: \"Rattata\",\n  hp: 18,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 7,\n  name: \"Piafabec\",\n  hp: 14,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 8,\n  name: \"Abo\",\n  hp: 16,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n  types: [\"Poison\"],\n  created: new Date()\n },\n {\n  id: 9,\n  name: \"Pikachu\",\n  hp: 21,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n  types: [\"Electrik\"],\n  created: new Date()\n },\n {\n  id: 10,\n  name: \"Sabelette\",\n  hp: 19,\n  cp: 3,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 11,\n  name: \"Mélofée\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n  types: [\"Fée\"],\n  created: new Date()\n },\n {\n  id: 12,\n  name: \"Groupix\",\n  hp: 17,\n  cp: 8,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n  types: [\"Feu\"],\n  created: new Date()\n }\n];\n  \nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n  \nexport default class PokemonService {\n  \n  static pokemons:Pokemon[] = POKEMONS;\n  \n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n  \n  static getPokemons(): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n  \n  static getPokemon(id: number): Promise<Pokemon|null> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\n    }); \n  }\n  \n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    }); \n  }\n  \n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    }); \n  }\n  \n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    pokemon.created = new Date(pokemon.created);\n  \n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    }); \n  }\n  \n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n  \n  }\n  \n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n  \n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}","\nimport React, { FunctionComponent } from 'react';\n  \nconst Loader: FunctionComponent = () => {\n   \n  return (\n    <div className=\"preloader-wrapper big active\"> \n      <div className=\"spinner-layer spinner-blue\"> \n        <div className=\"circle-clipper left\"> \n          <div className=\"circle\"></div> \n        </div>\n        <div className=\"gap-patch\"> \n          <div className=\"circle\"></div> \n        </div><div className=\"circle-clipper right\"> \n          <div className=\"circle\"></div> \n        </div>\n      </div> \n   </div> \n  );\n}\n   \nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\n\nimport PokemonService from '../services/pokemon-service';\nimport Loader from \"../components/loader\";\n\ntype Params = { id: string };\n  \nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  // le plus +  dans params.match.id est est une astuce de type script qui permet de modifier une chaine de caractere en un nombre \n  // car le router de react envoie l identifant sous la forme d une chaine de caractere dans dans static getPokemon\n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon =>setPokemon(pokemon))\n  }, [match.params.id]);\n    \n    \n    \n  return (\n      <div>\n          \n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\"> \n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\"> \n              <div className=\"card-image\">\n                              <img src={pokemon.picture} alt={pokemon.name} style={{ width: '250px', margin: '0 auto' }} />\n                              <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn  btn-floating halfway-fab waves-effect waves-light\" >\n                                  <i className=\"material-icons\">Edit</i>\n                              </Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr> \n                        <td>Nom</td> \n                        <td><strong>{ pokemon.name }</strong></td> \n                      </tr>\n                      <tr> \n                        <td>Points de vie</td> \n                        <td><strong>{ pokemon.hp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Dégâts</td> \n                        <td><strong>{ pokemon.cp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Types</td> \n                        <td>\n                          {pokemon.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td> \n                      </tr> \n                      <tr> \n                        <td>Date de création</td> \n                        <td>{formatDate(pokemon.created)}</td> \n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonsDetail;","import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\nimport PokemonService from '../services/pokemon-service';\n\n\n\ntype Props = {\n  pokemon: Pokemon,\n  isEditForm:boolean\n};\n  \n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?:boolean\n}\n\ntype Form = {\n  picture:Field,\n  name: Field,\n  hp: Field,\n  cp: Field,\n  types:Field\n}\n\n\nconst PokemonForm: FunctionComponent<Props> = ({ pokemon,isEditForm }) => {\n  \n  \n\n\n  \n  const [form, setForm] = useState<Form>({\n   picture: { value: pokemon.picture },\n  \n    name: { value: pokemon.name, isValid: true },\n    hp: { value: pokemon.hp, isValid: true },\n    cp: { value: pokemon.cp, isValid: true },\n    types: { value: pokemon.types, isValid: true },\n  });\n\n\n  const history = useHistory();\n\n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n   \n//methode hastypes  :  cette methode renvoit un simple boolean permettant de savoir si le teype passe appartient ou non au pokemon \n  const hasType = (type: string): boolean => {\n  \n    return form.types.value.includes(type)\n  }\n  \n  //le role de la methode handleInputChange est a chaque fois qu  il ya ura un changmenet au cours de l evenement au niveau du nom\n  //  et du point de vie du pokemon  ensuite on regroupe le smodifications du champ dans un nouvel obje\n  //newField ensuite on modifiere la etat d enotre firmulaire grace a setForm fournit par le hook  d etat (avec le spread operator qui va fsuionnner deux objets)\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    \n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName ]: { value: fieldValue } };\n    \n    setForm({ ...form, ...newField });\n  }\n\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n  \n    const checked = e.target.checked;\n    let newField: Field;\n\n    if (checked) {\n      \n      //si l utilisateur coche un type ,a l ajoute a la liste des types de pokémon.\n\n      const newTypes: string[] = form.types.value.concat([type]);\n      newField = { value: newTypes };\n    } else {\n      \n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n      newField = { value: newTypes };\n\n    }\n\n    setForm({ ...form, ...{ types: newField } });\n  }\n\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => { \n    \n    e.preventDefault();\n    const isFormValid = validateForm();\n    if (isFormValid) {\n      pokemon.picture = form.picture.value;\n\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n     \n      isEditForm ? updatePokemon() : addPokemon();\n\n    }\n    \n    //on redirige l utilsateur vers la pages d etatils d un utilsateur grace au hooks history\n  }\n\n  \n  const isAddForm = () => {\n    return !isEditForm;\n}\n\n\n  const validateForm = () => {\n    \n    let newForm: Form = form;\n    //validator url\n    if (isAddForm()) {\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\";\n\n      if (!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)){\n        \n\n\n        //les focntios native acmascript 6 permettre en proprite de voir si le prefixe et suffixe commence et finisse par ce que l on a dmenadé\n        const errorMsg: string = \"l'url n'est pas valide.\"\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\n        newForm = {\n          ...form, ...{ picture: newField }\n        }\n        }else {\n          const newField: Field = { value: form.picture.value, error: '', isValid: true };\n          newForm = {...form,...{picture:newField}}\n        }\n}\n\n\n    //Validator name\n    if (!/^[a-zA-Zàéè]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'le nom du pokemon est requis(1-25).';\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ name: newField } };\n      \n    } else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\n      newForm ={...newForm,...{name:newField}}\n    }\n\n\n        //Validator hp\n        if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\n          const errorMsg: string = 'les points de vie du pokemon sont compris entre 0-999.';\n          const newField: Field = { value: form.hp.value, error: errorMsg, isValid: false };\n          newForm = { ...newForm, ...{ hp: newField } };\n          \n        } else {\n          const newField: Field = { value: form.hp.value, error: '', isValid: true };\n          newForm ={...newForm,...{hp:newField}}\n        }\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n\n  }\n\n\n  const isTypeValid = (type: string): boolean => {\n  \n    if (form.types.value.length === 1 && !hasType(type)) {\n      return (false);\n    }\n\n    if (form.types.value.length >= 3 && !hasType(type)) {\n      return (false);\n    \n\n    }\n    return true;\n  }\n\n\n\n\n\n  const addPokemon = () => {\n    PokemonService.addPokemon(pokemon).then(() => history.push(`/pokemons`));\n  }\n\n  const updatePokemon = () => {\n    PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n  }\n\n\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n  }\n\n\n\n\n  return (\n    <form onSubmit={e=>handleSubmit(e)} > \n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            {isEditForm && (\n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{ width: '250px', margin: '0 auto' }} />\n                <span className=\"btn-floating halfway-fab waves-effect waves-light\">\n                  <i onClick={deletePokemon} className=\"materials-ions\" >delete</i>\n                </span>\n              </div>\n            )}\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon picture */}\n                \n                {isAddForm() && (\n                   <div className=\"form-group\">\n                  <label htmlFor=\"name\">Image</label>\n                  <input id=\"picture\" name=\"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\n                   {/* error */}\n                  {form.picture.error &&\n                    <div className=\"card-panel red accent-1\">\n                      {form.picture.error}\n                    </div>}\n\n                  </div>\n\n\n                )}\n              \n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                    {form.name.error && <div className=\"card-panel red accent-1\">\n                      {form.name.error}\n                    </div>}  \n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.hp.error && <div className=\"card-panel red accent-1\">\n                    {form.hp.error}\n                  </div>\n  }\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.cp.error && <div className=\"card-panel red accent-1\">\n                    {form.cp.error}\n                  </div>\n                  }\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>TYPE</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} disabled={!isTypeValid(type)} checked={hasType(type)} onChange={e =>selectType(type,e)}  ></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n   \nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service'\n \n\n\n//a la ligne 1O nous declarons un type pour une props nommé id qui correspond à l identifiant du pokemon a editer ensuite cette props on la psse au composant\ntype Params = { id: string };\n  \nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon =>setPokemon(pokemon))\n  \n  }, [match.params.id]);\n\n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\">Aucun pokémon à afficher !</h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonEdit;","import { type } from 'os';\nimport React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\nimport formatDate  from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\n\n\n\n\ntype Props = {\n    pokemon: Pokemon,\n    borderColor?: string\n};\n  \nconst PokemonCard: FunctionComponent<Props> = ({ pokemon, borderColor = '#b31e1e' }) => {\n    \n    const [color, setColor] = useState<string>();\n    const history = useHistory();\n  \n  \n  \n    const showBorder = () => {\n    setColor(borderColor)\n    }\n    \n    const hideBorder = () => {\n        setColor('#ffffff');// je remet la bordure en gris\n    }\n  \n  \n  const goToPokemon = (id: number) => {\n    \n    history.push(`/pokemons/${id}`)\n  }\n   \n  return (\n    <div className=\"col s6 m4\" onClick={()=> goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder} >\n      <div className=\"card horizontal\" style={{borderColor: color}}>\n        <div className=\"card-image\"> \n          <img src={pokemon.picture} alt={pokemon.name}/>\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <p>{pokemon.name}</p>\n            <p><small>{formatDate(pokemon.created)}</small></p>\n                      {/* <p><small>{pokemon.created.toString()}</small></p> */}\n                      \n                      {pokemon.types.map(type => (\n                          \n                          <span key={type} className={formatType(type)}>{type}</span>\n                      ))}\n          </div>\n        </div>\n      </div> \n    </div>\n  );\n}\n  \nexport default PokemonCard;","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\n \nconst PokemonSearch: FunctionComponent = () => {\n  \n  const [term, setTerm] = useState<string>('');\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n \n    if(term.length <= 1) {\n      setPokemons([]);\n      return;\n    }\n \n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  }\n  \n  return (\n    <div className=\"row\"> \n    <div className=\"col s12 m6 offset-m3\"> \n      <div className=\"card\"> \n      <div className=\"card-content\"> \n        <div className=\"input-field\"> \n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \n        </div> \n        <div className='collection'>\n        {pokemons.map((pokemon) => (\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\n            {pokemon.name}\n          </Link>\n        ))}\n        </div> \n      </div> \n      </div> \n    </div> \n    </div>\n  );\n}\n  \nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Pokemon from '../models/pokemon';\nimport PokemonCard from '../components/pokemon-card';\nimport PokemonService from '../services/pokemon-service'\nimport { Link } from 'react-router-dom';\nimport PokemonSearch from '../components/pokemon-search';\n\n\nconst PokemonList: FunctionComponent = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  \n  useEffect(() => {\n\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons))\n  }, []);\n  \n  return (\n    <div>\n      <h1 className=\"center\">Pokédex</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <PokemonSearch />\n          {pokemons.map(pokemon => (\n            <PokemonCard key={pokemon.id} pokemon={pokemon} />\n          ))}\n          <Link className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\" style={{position:'fixed',bottom:'25px', right:'25px'}} to=\"pokemon/add\"> <i className=\"material-icons\">add</i></Link>\n        \n        </div>\n      </div>\n    </div>\n  );\n}\n  \nexport default PokemonList;","export default class Pokemon {\n    // 1. Typage des propiétés d'un pokémon.\n    id: number;\n    hp: number;\n    cp: number;\n    name: string;\n    picture: string;\n    types: Array<string>;\n    created: Date;\n     \n    // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\n    constructor(\n     id: number,\n     hp: number = 100,\n     cp: number = 10,\n     name: string = '...',\n     picture: string = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png\",\n     types: Array<string> = ['Normal'],\n     created: Date = new Date()\n    ) {\n     // 3. Initialisation des propiétés d'un pokémons.\n     this.id = id;\n     this.hp = hp;\n     this.cp = cp;\n     this.name = name;\n     this.picture = picture;\n     this.types = types;\n     this.created = created;\n    }\n   }","import React, { FunctionComponent, useState } from 'react';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\n\n \n\n\n\n  \nconst PokemonAdd: FunctionComponent = () => {  \n    const [id] = useState<number>(new Date().getTime());      \n  const [pokemon] = useState<Pokemon>(new Pokemon(id));\n    return (\n        <div>\n    \n            <div className=\"row\">\n                <h2 className=\"header center\">Ajout </h2>\n                <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\n            </div>\n        </div>\n    );\n}\n  \nexport default PokemonAdd;","export default class AuthentificationService {\n\n    static isAuthentificated: boolean = false;\n\n    static login(username: string, password: string): Promise<boolean> {\n    \n        const isAuthentificated = (username === 'pikachu' && password === 'pikachu')\n\n        return new Promise(resolve => {\n            setTimeout(() => {\n                this.isAuthentificated = isAuthentificated;\n                resolve(isAuthentificated)\n            }, 1000)\n        })\n\n    }\n}\n","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from '../services/authentifiaction-service';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pikachu / pikachu)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 6) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n        \n        history.push('/pokemons');\n        \n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.username.error} \n                  </div>} \n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.password.error} \n                  </div>} \n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default Login;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthentificationService from './services/authentifiaction-service';\n  \nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => {\n    const isAuthentificated = AuthentificationService.isAuthentificated;\n    if (!isAuthentificated) {    \n      return <Redirect to={{ pathname: '/login' }} />\n    }\n  \n    return <Component {...props} />\n  }} />\n);\n  \nexport default PrivateRoute;","import React,{FunctionComponent} from 'react';\nimport {BrowserRouter as Router, Route, Switch,Link } from 'react-router-dom';\nimport PokemonsDetail from './pages/pokemon-details';\nimport PokemonEdit from './pages/pokemon-edit';\nimport PokemonList from './pages/pokemon-list';\nimport PokemonAdd from './pages/pokemon-add';\nimport Login from \"./pages/login\";\n import  PrivateRoute from'./PrivateRoute'\n\n//FC :signifie :function componnent \n  \nconst App: FunctionComponent = () => {\n  \n  return (\n       \n    <Router>\n      <div>\n        {/*la barre de navigation commun a tout le sutilisateurs*/}\n        <nav>\n          <div className=\"nav-wrappper teal\">\n            <Link to=\"/\" className=\"brand-logo center\">Pokedex</Link>\n          </div>\n        </nav>\n        <Switch>     \n          <PrivateRoute exact path=\"/\" component={PokemonList} />\n          <Route exact path=\"/login\" component={Login} />\n          <PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\n          <PrivateRoute exact path=\"/pokemons/edit/:id\" component={PokemonEdit} />\n          <PrivateRoute  path=\"/pokemons/:id\" component={PokemonsDetail} />\n          <PrivateRoute  path=\"/pokemon/add\" component={PokemonAdd} />\n        </Switch>\n      </div>\n    </Router>\n   \n  )\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n        \n           \n       \n"],"sourceRoot":""}